name: Continuous Integration

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

jobs:

  lint:
    runs-on: ubuntu-latest
    container:
      image: gitlab-registry.cern.ch/atlas-sit/docker/alma9-atlasos:latest

    steps:
      - uses: actions/checkout@v4

      - name: Install codespell
        run: pip3 install codespell

      - name: Lint
        run: cmake -D FORMAT_COMMAND=clang-format-14 -P cmake/lint.cmake

      - name: Spell check
        if: always()
        run: cmake -P cmake/spell.cmake

  coverage:
    needs: [lint]
    runs-on: ubuntu-latest
    container:
      image: gitlab-registry.cern.ch/atlas-sit/docker/alma9-atlasos:latest
    if: github.repository_owner == '<name>' && false
    steps:
      - uses: actions/checkout@v4

      - name: Install LCov
        run: |
          dnf install lcov -y

      - name: Configure
        run: cmake --preset=ci-coverage

      - name: Build
        run: cmake --build build/coverage -j 2

      - name: Test
        working-directory: build/coverage
        run: ctest --output-on-failure --no-tests=error -j 2

      - name: Process coverage info
        run: cmake --build build/coverage -t coverage

      - name: Submit to codecov.io
        uses: codecov/codecov-action@v4
        with:
          file: build/coverage/coverage.info

  sanitize:
    needs: [lint]
    runs-on: ubuntu-latest
    container:
      image: gitlab-registry.cern.ch/atlas-sit/docker/alma9-atlasos:latest
    env:
      CXX: clang++-14
    steps:
      - uses: actions/checkout@v4

      - name: Configure
        run: cmake --preset=ci-sanitize

      - name: Build
        run: cmake --build build/sanitize -j 2

      - name: Test
        working-directory: build/sanitize
        env:
          ASAN_OPTIONS: "strict_string_checks=1:\
            detect_stack_use_after_return=1:\
            check_initialization_order=1:\
            strict_init_order=1:\
            detect_leaks=1"
          UBSAN_OPTIONS: print_stacktrace=1
        run: ctest --output-on-failure --no-tests=error -j 2

  test:
    needs: [lint]
    strategy:
      matrix:
        os: [ubuntu-latest]
        type: [shared, static]
        include:
          - type: shared, shared: YES
          - type: static, shared: NO
    runs-on: ubuntu-latest
    container:
      image: gitlab-registry.cern.ch/atlas-sit/docker/alma9-atlasos:latest
    steps:
      - uses: actions/checkout@v4

      - name: Install static analyzers
        run: |
          dnf install clang-tidy cppcheck -y

      - name: Configure
        run: cmake --preset=ci -D BUILD_SHARED_LIBS=${{ matrix.shared }}

      - name: Build
        run: cmake --build build --config Release -j 2

      - name: Install
        run: cmake --install build --config Release --prefix prefix

      - name: Test
        working-directory: build
        run: ctest --output-on-failure --no-tests=error -C Release -j 2

  docs:
    needs: [sanitize, test]
    runs-on: ubuntu-latest
    container:
      image: gitlab-registry.cern.ch/atlas-sit/docker/alma9-atlasos:latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push' && github.repository_owner == '<name>' && false
    steps:
      - uses: actions/checkout@v4

      - name: Install m.css dependencies
        run: pip3 install jinja2 Pygments

      - name: Install Doxygen
        run: |
          dnf install doxygen -y

      - name: Build docs
        run: cmake "-DPROJECT_SOURCE_DIR=$PWD" "-DPROJECT_BINARY_DIR=$PWD/build" -P cmake/docs-ci.cmake

      - name: Deploy docs
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: build/docs/html
