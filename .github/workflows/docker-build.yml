name: docker-build

on:
  pull_request:
    types:
    - labeled

jobs:
  check-label:
    name: Check if 'docker-build' label exists
    runs-on: ubuntu-latest
    outputs:
      docker-build: ${{ steps.label-check.outputs.should_run }}
    steps:
    - name: Check if PR has 'docker-build' label
      id: label-check
      uses: actions/github-script@v7
      with:
        script: >
          const label = "docker-build"; const labels = context.payload.pull_request.labels.map(l => l.name); core.setOutput("should_run", labels.includes(label) ? "true" : "false");

  build-and-push:
    runs-on: self-hosted
    strategy:
      matrix:
        os: [ alma9, ubuntu24 ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up QEMU for multi-arch builds
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Cache Docker layers on Github
      uses: actions/cache@v4

      with:
        path: /tmp/.buildx-cache
        key: buildx-${{ runner.os }}-${{ matrix.os }}-${{ github.sha }}
        restore-keys: |
          buildx-${{ runner.os }}-${{ matrix.os }}-

    - name: Build and Push Multi-Arch Image
      uses: docker/build-push-action@v5
      with:
        context: docker/${{ matrix.os }}
        file: docker/${{ matrix.os }}/Dockerfile
        push: true
        platforms: linux/amd64,linux/arm64
        cache-from: |
          type=local,src=/tmp/.buildx-cache
          type=registry,ref=fastcalosim/${{ matrix.os }}-fastcalosim:cache
        cache-to: |
          type=local,dest=/tmp/.buildx-cache
          type=registry,ref=fastcalosim/${{ matrix.os }}-fastcalosim:cache,mode=max
        tags: fastcalosim/${{ matrix.os }}-fastcalosim:latest
