name: docker-build

on:
  workflow_call:

env:
  REGISTRY_IMAGE: fcsproj/fastcalosim

jobs:

  # Step 2: Run Docker build ONLY if relevant files changed and not a closed PR
  build:
    needs: check-files
    if: needs.check-files.outputs.docker_changed == 'true' && github.event.action != 'closed'
    strategy:
      matrix:
        os: [ alma9, ubuntu24 ]
        platform:
        - linux/amd64
        - linux/arm64

    # Use appropriate runner based on platform
    # Note: GithubRunners have a job timeout of 6 hours = 360 minutes
    runs-on: ${{ (matrix.platform == 'linux/arm64' && 'ubuntu-24.04-arm') || (matrix.platform == 'linux/amd64' && 'ubuntu-24.04') }}
    timeout-minutes: 1440
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Prepare
      run: |
        platform=${{ matrix.platform }}
        echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY_IMAGE }}-${{ matrix.os }}

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push by digest
      id: build
      uses: docker/build-push-action@v6
      with:
        context: docker/${{ matrix.os }}
        file: docker/${{ matrix.os }}/Dockerfile
        platforms: ${{ matrix.platform }}
        labels: ${{ steps.meta.outputs.labels }}
        tags: ${{ env.REGISTRY_IMAGE }}-${{ matrix.os }}
        outputs: type=image,push-by-digest=true,name-canonical=true,push=true
        cache-from: |
          type=registry,ref=${{ env.REGISTRY_IMAGE }}-${{ matrix.os }}:cache-${{ env.PLATFORM_PAIR }}
          type=registry,ref=${{ env.REGISTRY_IMAGE }}-${{ matrix.os }}:latest
        cache-to: |
          type=registry,ref=${{ env.REGISTRY_IMAGE }}-${{ matrix.os }}:cache-${{ env.PLATFORM_PAIR }},mode=max

    - name: Export digest
      run: |
        mkdir -p ${{ runner.temp }}/digests
        digest="${{ steps.build.outputs.digest }}"
        touch "${{ runner.temp }}/digests/${digest#sha256:}"

    - name: Upload digest
      uses: actions/upload-artifact@v4
      with:
        name: digests-${{ matrix.os }}-${{ env.PLATFORM_PAIR }}
        path: ${{ runner.temp }}/digests/*
        if-no-files-found: error
        retention-days: 1

  merge:
    runs-on: ubuntu-latest
    needs:
    - build
    strategy:
      matrix:
        os: [ alma9, ubuntu24 ]
    steps:
    - name: Download digests
      uses: actions/download-artifact@v4
      with:
        path: ${{ runner.temp }}/digests
        pattern: digests-${{ matrix.os }}-*
        merge-multiple: true

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY_IMAGE }}-${{ matrix.os }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}

    - name: Create manifest list and push
      working-directory: ${{ runner.temp }}/digests
      run: |
        docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
          $(printf '${{ env.REGISTRY_IMAGE }}-${{ matrix.os }}@sha256:%s ' *)

    - name: Inspect image
      run: |
        docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}-${{ matrix.os }}:${{ steps.meta.outputs.version }}
