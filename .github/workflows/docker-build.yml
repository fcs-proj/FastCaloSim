name: docker-build

on:
  pull_request:
    branches:
    - main

jobs:
  check-docker-changes:
    runs-on: ubuntu-latest
    outputs:
      docker_needed: ${{ steps.filter.outputs.docker }}
    steps:
    - name: Check out repository
      uses: actions/checkout@v4

    - name: Detect Docker file changes
      id: filter
      uses: dorny/paths-filter@v3
      with:
        filters: |+
          docker:
            - 'docker/**'
            - '.github/workflows/docker-build.yml'

  build-and-push:
    needs: check-docker-changes
    if: needs.check-docker-changes.outputs.docker_needed == 'true'
    runs-on: self-hosted
    strategy:
      matrix:
        os: [ alma9, ubuntu24 ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up QEMU for multi-arch builds
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Cache Docker layers on Github
      uses: actions/cache@v4
      with:
        path: /tmp/.buildx-cache
        key: buildx-${{ runner.os }}-${{ matrix.os }}-${{ github.sha }}
        restore-keys: |
          buildx-${{ runner.os }}-${{ matrix.os }}-

    - name: Build and Push Multi-Arch Image
      uses: docker/build-push-action@v5
      with:
        context: docker/${{ matrix.os }}
        file: docker/${{ matrix.os }}/Dockerfile
        push: true
        platforms: linux/amd64,linux/arm64
        build-args: |
          NPROC=$(nproc)
        cache-from: |
          type=local,src=/tmp/.buildx-cache
          type=registry,ref=fastcalosim/${{ matrix.os }}-fastcalosim:cache
        cache-to: |
          type=local,dest=/tmp/.buildx-cache
          type=registry,ref=fastcalosim/${{ matrix.os }}-fastcalosim:cache,mode=max
        tags: fastcalosim/${{ matrix.os }}-fastcalosim:latest
